upstream order-front {
`
for SVR_NAME in ${!ORDER_LIST[@]}; do
    echo "    server ${ORDER_LIST[$SVR_NAME]}:${ORDER_PORT};"
done
`
}

upstream tradebase-front {
`
for SVR_NAME in ${!TRADEBASE_LIST[@]}; do
    echo "    server ${TRADEBASE_LIST[$SVR_NAME]}:${TRADEBASE_PORT};"
done
`
}

upstream query-front {
`
for SVR_NAME in ${!QUERY_LIST[@]}; do
    echo "    server ${QUERY_LIST[$SVR_NAME]}:${QUERY_PORT};"
done
`
}

upstream websocket-front {
`
for SVR_NAME in ${!WEBSOCKET_LIST[@]}; do
    echo "    server ${WEBSOCKET_LIST[$SVR_NAME]}:${WEBSOCKET_PORT};"
done
`
}

upstream kline-front {
`
for SVR_NAME in ${!KLINE_LIST[@]}; do
    echo "    server ${KLINE_LIST[$SVR_NAME]}:${KLINE_PORT};"
done
`
}

upstream index-front {
`
for SVR_NAME in ${!INDEX_LIST[@]}; do
    echo "    server ${INDEX_LIST[$SVR_NAME]}:${INDEX_PORT};"
done
`
}

geo \$limit {
    default 1;
    192.168.0.0/16 0;
    172.16.0.0/12 0;
    10.0.0.0/8 0;
}

map \$limit \$limit_key {
    0 "";
    1 \$http_api_key;
}

map \$limit \$limit_ip {
    0 "";
    1 \$binary_remote_addr;
}

limit_req_zone \$limit_key zone=api_key_limit:10m rate=1r/s;

limit_req_zone \$limit_ip zone=remote_ip_limit:50m rate=30r/s;

server {
    listen      80;
    server_name trade localhost;

    proxy_read_timeout 600;
    proxy_send_timeout 300;

    # error_log /var/log/nginx/trade.error.log debug;

    location / {
        root   /var/lib/nginx/quant-coin;
        index  index.html index.htm;

        # 用于配合 browserHistory使用
        try_files \$uri \$uri/ /index.html;

        # 如果有资源，建议使用 https + http2，配合按需加载可以获得更好的体验
        # rewrite ^/(.*)$ https://preview.pro.ant.design/$1 permanent;
    }

    location ~ ^/.*\.map\$ {
        allow 192.168.0.0/16;
        allow 172.16.0.0/12;
        allow 10.0.0.0/8;
        deny all;
    }

    location = /version {
        allow 192.168.0.0/16;
        allow 172.16.0.0/12;
        allow 10.0.0.0/8;
        deny all;

        default_type application/json;

        root   /var/lib/nginx/quant-coin;

        auth_basic "Restricted";
        auth_basic_user_file /var/lib/nginx/loginuser;
    }

    location ~ ^/(config|symbol|statistics) {
        access_log  /var/log/nginx/trade.access.log  proxy;

        limit_req zone=remote_ip_limit burst=30 nodelay;

        proxy_http_version 1.1;

        proxy_pass http://kline-front;

        proxy_set_header HOST \$HOST;
        proxy_set_header X-REAL-IP \$remote_addr;
        proxy_set_header X-REAL-PORT \$remote_port;
        proxy_set_header X-Forwarded-SERVER \$http_x_forwarded_for;
        proxy_set_header Request-Url \$request_uri;
    }

    location ^~ /history {
        access_log  /var/log/nginx/trade.access.log  proxy;

        limit_req zone=remote_ip_limit burst=30 nodelay;

        # set_by_lua \$args '
        #     local from = tonumber(ngx.var.arg_from)
        #     local to = tonumber(ngx.var.arg_to)
        #     local symbol = ngx.var.arg_symbol
        #     local resolution = ngx.var.arg_resolution
        #     local trimResolution = 60
        # 
        #     if (string.sub(resolution, -1)=="D")
        #     then
        #         trimResolution = 3600 * 24
        #     else
        #         trimResolution = tonumber(resolution) * 60
        #     end
        # 
        #     local f1 = math.modf(from / trimResolution)
        #     local t1 = math.modf(to / 10)
        #     return string.format("symbol=%s&resolution=%s&from=%d&to=%d", symbol, resolution, f1*trimResolution, t1*10)
        # ';
        # 
        # proxy_cache             kline_cache;
        # proxy_cache_key         \$args;
        # proxy_cache_valid       200 3d;
        # 
        # proxy_ignore_headers    X-Accel-Expires Expires Cache-Control;
        # proxy_ignore_headers    Set-Cookie;
        # proxy_hide_header       cache-control;
        # proxy_hide_header       expires;
        # proxy_hide_header       Set-Cookie;
        
        # proxy_cache_revalidate  on;
        # proxy_cache_min_uses    1;
        # proxy_cache_use_stale   error timeout updating http_500 http_502
        #                         http_503 http_504;
        # proxy_cache_background_update on;
        # proxy_cache_lock        on;
        # proxy_cache_bypass      \$http_caizche_purge;

        proxy_http_version 1.1;

        proxy_pass http://kline-front;

        proxy_next_upstream error timeout http_500 http_502 http_503;

        proxy_set_header HOST \$HOST;
        proxy_set_header X-REAL-IP \$remote_addr;
        proxy_set_header X-REAL-PORT \$remote_port;
        proxy_set_header X-Forwarded-SERVER \$http_x_forwarded_for;
        proxy_set_header Request-Url \$request_uri;

        # add_header  Nginx-Cache "\$upstream_cache_status";
    }

    location ^~ /api/v1/full/instrument {
        access_log  /var/log/nginx/trade.access.log  proxy;

        limit_req zone=remote_ip_limit burst=30 nodelay;

        proxy_http_version 1.1;

        proxy_pass http://index-front;

        proxy_set_header HOST \$HOST;
        proxy_set_header X-REAL-IP \$remote_addr;
        proxy_set_header X-REAL-PORT \$remote_port;
        proxy_set_header X-Forwarded-SERVER \$http_x_forwarded_for;
        proxy_set_header Request-Url \$request_uri;
    }

    location ^~ /api/v1/instrument {
        access_log  /var/log/nginx/trade.access.log  proxy;

        limit_req zone=remote_ip_limit burst=30 nodelay;

        proxy_http_version 1.1;

        proxy_pass http://index-front;

        proxy_set_header HOST \$HOST;
        proxy_set_header X-REAL-IP \$remote_addr;
        proxy_set_header X-REAL-PORT \$remote_port;
        proxy_set_header X-Forwarded-SERVER \$HOST;
        proxy_set_header Request-Url \$request_uri;
    }

    location ^~ /api/v1/user {
        access_log  /var/log/nginx/trade.access.log  proxy;

        limit_req zone=remote_ip_limit burst=30 nodelay;

        proxy_http_version 1.1;

        proxy_pass http://tradebase-front;

        proxy_set_header HOST \$HOST;
        proxy_set_header X-REAL-IP \$remote_addr;
        proxy_set_header X-REAL-PORT \$remote_port;
        proxy_set_header X-Forwarded-SERVER \$http_x_forwarded_for;
        proxy_set_header Request-Url \$request_uri;

        proxy_pass_header api-key;
        proxy_pass_header api-expires;
        proxy_pass_header api-signature;
        proxy_pass_header x-auth-token;

        if ( \$request_method = 'OPTIONS' ) { 
            add_header Access-Control-Allow-Origin \$http_origin; 
            add_header Access-Control-Allow-Headers Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,X-Data-Type,X-Requested-With; 
            add_header Access-Control-Allow-Methods GET,POST,OPTIONS,HEAD,PUT; 
            add_header Access-Control-Allow-Credentials true; 
            add_header Access-Control-Allow-Headers X-Data-Type,X-Auth-Token;
        }
    }

    location ^~ /api/v1/apiKey {
        access_log  /var/log/nginx/trade.access.log  proxy;

        limit_req zone=api_key_limit burst=10 nodelay;

        add_header Access-Control-Allow-Headers X-Requested-With;
        add_header Access-Control-Allow-Methods GET,POST,OPTIONS;
        if ( \$request_method = 'OPTIONS' ) {
            add_header Access-Control-Allow-Origin \$http_origin;
            add_header Access-Control-Allow-Headers Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,X-Data-Type,X-Requested-With;
            add_header Access-Control-Allow-Methods GET,POST,OPTIONS,HEAD,PUT;
            add_header Access-Control-Allow-Credentials true;
            add_header Access-Control-Allow-Headers X-Data-Type,X-Auth-Token;
            return 204;
        }

        proxy_http_version 1.1;

        proxy_pass http://tradebase-front;

        proxy_set_header HOST \$HOST;
        proxy_set_header X-REAL-IP \$remote_addr;
        proxy_set_header X-REAL-PORT \$remote_port;
        proxy_set_header X-Forwarded-SERVER \$http_x_forwarded_for;
        proxy_set_header Request-Url \$request_uri;

        proxy_pass_header api-key;
        proxy_pass_header api-expires;
        proxy_pass_header api-signature;
        proxy_pass_header x-auth-token;
    }

    location = /realtime {
        proxy_pass http://websocket-front;
        proxy_read_timeout 300s;

        limit_req zone=remote_ip_limit burst=30 nodelay;

        proxy_set_header HOST \$HOST;
        proxy_set_header X-REAL-IP \$remote_addr;
        proxy_set_header X-REAL-PORT \$remote_port;
        proxy_set_header X-Forwarded-SERVER \$http_x_forwarded_for;
        proxy_set_header Request-Url \$request_uri;

        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_pass_header api-key;
        proxy_pass_header api-expires;
        proxy_pass_header api-signature;
        proxy_pass_header CLIENT-ID;
        proxy_pass_header ACCOUNT-ID;
        proxy_pass_header x-auth-token;
    }
    
    location ~ /api/v1/(accountx|positionx|instrumentx|signature|client|orderx)(/sys|/token)? {
        access_log  /var/log/nginx/trade.access.log  proxy;

        allow 192.168.0.0/16;
        allow 172.16.0.0/12;
        allow 10.0.0.0/8;
        deny all;

        proxy_http_version 1.1;

        proxy_pass http://order-front/\$1\$2\$is_args\$args;

        proxy_set_header HOST \$HOST;
        proxy_set_header X-REAL-IP \$remote_addr;
        proxy_set_header X-REAL-PORT \$remote_port;
        proxy_set_header X-Forwarded-SERVER \$http_x_forwarded_for;
        proxy_set_header Request-Url \$request_uri;

        # proxy_pass_header api-key;
        # proxy_pass_header api-expires;
        # proxy_pass_header api-signature;
        proxy_pass_header CLIENT-ID;
        proxy_pass_header ACCOUNT-ID;
        # proxy_pass_header x-auth-token;
    }

    location = /api/v1/executionx {
        access_log  /var/log/nginx/trade.access.log  proxy;

        allow 192.168.0.0/16;
        allow 172.16.0.0/12;
        allow 10.0.0.0/8;
        deny all;

        proxy_http_version 1.1;

        proxy_pass http://query-front/executionx\$is_args\$args;

        proxy_set_header HOST \$HOST;
        proxy_set_header X-REAL-IP \$remote_addr;
        proxy_set_header X-REAL-PORT \$remote_port;
        proxy_set_header X-Forwarded-SERVER \$http_x_forwarded_for;
        proxy_set_header Request-Url \$request_uri;

        # proxy_pass_header api-key;
        # proxy_pass_header api-expires;
        # proxy_pass_header api-signature;
        proxy_pass_header CLIENT-ID;
        proxy_pass_header ACCOUNT-ID;
        # proxy_pass_header x-auth-token;
    }

    location = /api/v1/user/margin {
        access_log  /var/log/nginx/trade.access.log  proxy;

        set \$auth_flag "";

        if (\$http_x_auth_token = "") {
            set \$auth_flag 0;
        }
        if (\$http_api_key = "") {
            set \$auth_flag "\${auth_flag}1";
        }
        if (\$http_api_expires = "") {
            set \$auth_flag "\${auth_flag}2";
        }
        if (\$http_api_signature = "") {
            set \$auth_flag "\${auth_flag}3";
        }

        if (\$auth_flag ~ 01[23]*) {
            return 401 'no api-key header found.';
        }
        if (\$auth_flag ~ 01?2) {
            return 401 'no api-expires header found.';
        }
        if (\$auth_flag ~ 0[12]*3) {
            return 401 'no api-signature header found.';
        }

        limit_req zone=api_key_limit burst=10 nodelay;

        proxy_http_version 1.1;
        
        proxy_pass http://order-front/user/margin;

        proxy_set_header HOST \$HOST;
        proxy_set_header X-REAL-IP \$remote_addr;
        proxy_set_header X-REAL-PORT \$remote_port;
        proxy_set_header X-Forwarded-SERVER \$http_x_forwarded_for;
        proxy_set_header Request-Url \$request_uri;

        proxy_pass_header api-key;
        proxy_pass_header api-expires;
        proxy_pass_header api-signature;
        proxy_pass_header x-auth-token;
        proxy_pass_header ACCOUNT-ID;
    }

    location = /api/v1/order/all {
        access_log  /var/log/nginx/trade.access.log  proxy;

        set \$auth_flag "";

        if (\$http_x_auth_token = "") {
            set \$auth_flag 0;
        }
        if (\$http_api_key = "") {
            set \$auth_flag "\${auth_flag}1";
        }
        if (\$http_api_expires = "") {
            set \$auth_flag "\${auth_flag}2";
        }
        if (\$http_api_signature = "") {
            set \$auth_flag "\${auth_flag}3";
        }

        if (\$auth_flag ~ 01[23]*) {
            return 401 'no api-key header found.';
        }
        if (\$auth_flag ~ 01?2) {
            return 401 'no api-expires header found.';
        }
        if (\$auth_flag ~ 0[12]*3) {
            return 401 'no api-signature header found.';
        }

        limit_req zone=api_key_limit burst=10 nodelay;

        proxy_http_version 1.1;
        
        proxy_pass http://order-front/order/all;

        proxy_set_header HOST \$HOST;
        proxy_set_header X-REAL-IP \$remote_addr;
        proxy_set_header X-REAL-PORT \$remote_port;
        proxy_set_header X-Forwarded-SERVER \$http_x_forwarded_for;
        proxy_set_header Request-Url \$request_uri;

        proxy_pass_header api-key;
        proxy_pass_header api-expires;
        proxy_pass_header api-signature;
        proxy_pass_header x-auth-token;
    }

    location = /api/v1/order {
        access_log  /var/log/nginx/trade.access.log  proxy;

        set \$auth_flag "";

        if (\$http_x_auth_token = "") {
            set \$auth_flag 0;
        }
        if (\$http_api_key = "") {
            set \$auth_flag "\${auth_flag}1";
        }
        if (\$http_api_expires = "") {
            set \$auth_flag "\${auth_flag}2";
        }
        if (\$http_api_signature = "") {
            set \$auth_flag "\${auth_flag}3";
        }

        if (\$auth_flag ~ 01[23]*) {
            return 401 'no api-key header found.';
        }
        if (\$auth_flag ~ 01?2) {
            return 401 'no api-expires header found.';
        }
        if (\$auth_flag ~ 0[12]*3) {
            return 401 'no api-signature header found.';
        }

        limit_req zone=api_key_limit burst=10 nodelay;
        
        set \$BACK_END http://order-front;
        if (\$request_method = 'GET') {
            set \$BACK_END http://query-front;
        }

        proxy_http_version 1.1;
        
        proxy_pass \$BACK_END/order\$is_args\$args;

        proxy_set_header HOST \$HOST;
        proxy_set_header X-REAL-IP \$remote_addr;
        proxy_set_header X-REAL-PORT \$remote_port;
        proxy_set_header X-Forwarded-SERVER \$http_x_forwarded_for;
        proxy_set_header Request-Url \$request_uri;

        proxy_pass_header api-key;
        proxy_pass_header api-expires;
        proxy_pass_header api-signature;
        proxy_pass_header x-auth-token;
    }

    location ~ /api/v1/position(/(leverage|riskLimit|isolate|transferMargin)) {
        access_log  /var/log/nginx/trade.access.log  proxy;

        set \$BACK_END http://order-front/position\$1;
        if (\$request_method = 'GET') {
            set \$BACK_END http://query-front/position\$1\$is_args\$args;
        }

        set \$auth_flag "";

        if (\$http_x_auth_token = "") {
            set \$auth_flag 0;
        }
        if (\$http_api_key = "") {
            set \$auth_flag "\${auth_flag}1";
        }
        if (\$http_api_expires = "") {
            set \$auth_flag "\${auth_flag}2";
        }
        if (\$http_api_signature = "") {
            set \$auth_flag "\${auth_flag}3";
        }

        if (\$auth_flag ~ 01[23]*) {
            return 401 'no api-key header found.';
        }
        if (\$auth_flag ~ 01?2) {
            return 401 'no api-expires header found.';
        }
        if (\$auth_flag ~ 0[12]*3) {
            return 401 'no api-signature header found.';
        }

        limit_req zone=api_key_limit burst=10 nodelay;

        proxy_http_version 1.1;
        
        proxy_pass \$BACK_END;

        proxy_set_header HOST \$HOST;
        proxy_set_header X-REAL-IP \$remote_addr;
        proxy_set_header X-REAL-PORT \$remote_port;
        proxy_set_header X-Forwarded-SERVER \$http_x_forwarded_for;
        proxy_set_header Request-Url \$request_uri;

        proxy_pass_header api-key;
        proxy_pass_header api-expires;
        proxy_pass_header api-signature;
        proxy_pass_header x-auth-token;
    }

    location ^~ /api/v1/docs {
        access_log  /var/log/nginx/trade.access.log  proxy;

        limit_req zone=remote_ip_limit burst=30 nodelay;

        alias /var/lib/nginx/swagger-ui;
        index  index.html index.htm;
    }

    location ~ /api/v1/(.*) {
        access_log  /var/log/nginx/trade.access.log  proxy;

        limit_req zone=api_key_limit burst=10 nodelay;
        limit_req zone=remote_ip_limit burst=30 nodelay;

        proxy_http_version 1.1;
        
        proxy_pass http://query-front/\$1\$is_args\$args;

        proxy_set_header HOST \$HOST;
        proxy_set_header X-REAL-IP \$remote_addr;
        proxy_set_header X-REAL-PORT \$remote_port;
        proxy_set_header X-Forwarded-SERVER \$HOST;
        proxy_set_header Request-Url \$request_uri;

        proxy_pass_header api-key;
        proxy_pass_header api-expires;
        proxy_pass_header api-signature;
        proxy_pass_header x-auth-token;
    }
}

