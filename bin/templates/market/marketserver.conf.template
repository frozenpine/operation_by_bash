# 公有配置

# 是否将日志输入到文件
LogToFile=true

# log文件目录，注意：目录后面的正斜杠不要少！
logFileDir=log/

# log 文件名
logFileName=market

# 单个日志文件的大小,500M
LogFileRollSize=524288000

# 日志级别,从0~4开始依次对应TRACE、DEBUG、INFO、WARNING、ERROR
LogLevel=2

#监控端口
monitorlistenip=${LISTEN_ADDR:=0.0.0.0}
monitorlistenport=${MONITOR_PORT:=8888}
monitortoken=123
#监控邮箱
# 为了区分收到的告警邮件是哪个服务发出来的，部署时，请将这个配置项设置成一个唯一值
# Smonitorservername=`uname -n`
# monitormailserver=smtp.163.com
# monitormailport=25
# monitormailuser=testformybook@163.com
# monitormailpassword=2019hhxxttxs
# monitormailto=slgeng@115bit.com;zhangyl@115bit.com;yinkangxi@115bit.com

# kafka 配置
KafkaGroupID=marketserver${ID}
KafkaBrokers=${KFK_SERVERS}
# 行情全量快照kafka topic名称
KafkaTopicSnapshot=${KFK_CHECKPOINT_TOPIC:=MATCH-JSON-SS}
# 行情增量、基础行情、合约kafka topic名称
KafkaTopicIncrement=${KFK_INCREMENT_TOPIC:=MATCH-JSON-SS-INCREMENT}
# order、trade、position、margin等信息kafka topic名称
KafkaTopicOther=${KFK_NOTIFY_TOPIC:=NOTIFY-CLIENT}
# instrument topic名称
KafkaTopicInstrument=${KFK_INSTRUMENT_TOPIC:=INSTRUMENT}

# 获取全量合约和指数的时间间隔，单位为秒(默认半小时)
RequestInstrumentAllInterval=1800

# websocket 配置
#websocket侦听地址 
WsHost=${LISTEN_ADDR:=0.0.0.0}
#websocket的端口号
WsPort=${WS_PORT:=9988}

# 是否开启心跳包
EnableHeartbeat=true
# 心跳包检测时间间隔，单位秒
HeartbeatCheckInterval=15
# 客户端与服务之间没有数据来往允许的最大时间间隔，超过这个时间，将关闭与该客户端的连接，单位为秒
MaxClientDataInterval=45

# 拉取公告的时间间隔，单位为秒，可选配置
PullAnnouncementInterval=15
# 拉取公告的 URL
PullAnnouncementURL=http://docs.365mex.com/api/document

#客户端连接成功后的欢迎语
WelcomeMsg={"info":"Welcome to the 365MEX Realtime API.","version":"2019-03-26T18:43:09.000Z","timestamp":"2019-03-28T06:05:15.309Z","docs":"https://www.365MEX.com/app/wsAPI","limit":{"remaining":39}}
#apikey和signature校验地址
CheckSignatureURL=${TRADE_FRONT}/api/v1/signature
#当前订单查询接口
QueryOrderURL=${TRADE_FRONT}/api/v1/orderx/sys
#资金查询接口
QueryMarginURL=${TRADE_FRONT}/api/v1/accountx
#仓位查询接口
QueryPositionURL=${TRADE_FRONT}/api/v1/positionx
#近期交易列表接口
QueryTradeURL=${TRADE_FRONT}/api/v1/trade?reverse=true
#账户成交查询接口
QueryExecutionURL=${TRADE_FRONT}/api/v1/executionx?count=200&reverse=true

#获取全量instrument接口
GetInstrumentDataURL=${TRADE_FRONT}/api/v1/instrument