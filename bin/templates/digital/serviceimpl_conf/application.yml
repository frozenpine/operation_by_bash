#debug: true
server:
  #servlet:
  #  context-path: /demo
  port:
    9090

logging:
  #以jar包部署运行时,如果需要修改log4j2.yml配置,请开放如下配置,默认log4j2.yml是为生产环境准备的
  #config: file:./config/log4j2.yml
  config: classpath:log4j2.yml
  level:
    com:
      quantdo:
        framework: Warn

spring:
  kafka:
    consumer:
      enable:
        auto:
          commit: false
      session:
        timeout: 10000
      auto:
        commit:
          interval: 100
        offset:
          reset: earliest
      group:
        id: digital_local
      concurrency: 1
  application:
    #指定当前服务/应用的名字（同样的服务名字相同，不要和别的服务同名）
    name: quantdo-digital-provider
  profiles:
    #导入属性配置文件列表datasource或dynamicdatasource
    include: cache,dubbo-provider,dynamicdatasource
    #建议配置项为dev/test/prod
    #active: dev
  #devtools热部署支持.
  devtools:
    restart:
      #添加那个目录的文件需要restart
      additional-paths: src/main/java
      #排除那个目录的文件不需要restart
      exclude: static/**,public/**
kafka:
  consumer:
    enable:
      auto:
        commit: true
    session:
      timeout: 6000
    auto:
      commit:
        interval: 100
      offset:
        reset: earliest
    group:
      id: MATCH-JSON-SS-INCREMENT
    concurrency: 10

#Actuator健康诊断
#management:
#  server:
#    #Actuator健康诊断端口
#    port: 9000
#  endpoints:
#    web:
#      #修改访问路径  2.0之前默认是/   2.0默认是 /actuator  可以通过这个属性值修改
#      base-path: /monitor
#      exposure:
#        #开放所有页面节点,默认只开启了health、info两个节点
#        include: "*"
#  endpoint:
#    health:
#      #显示健康具体信息  默认不会显示详细信息
#      show-details: always

quantdo:
  filemanager:
    #文件系统支持协议类型为:local、fastdfs、nfs、hdfs
    protocol: local
    serveraddress: d:/quantdo-test/upload/


    ####################################################################
    # 交易周边事件通知属性

com:
  js:
    trade:
      data-exchange:
        command-publisher:
          enabled: true
        command:
          producer:
            acks: all
            enable:
              idempotence: true
            bootstrap:
              servers: 192.168.1.21:9091
            key:
              serializer: org.apache.kafka.common.serialization.StringSerializer
            value:
              serializer: com.js.trade.kafka.kryo.KryoSerializer
            compression:
              type: gzip
              #com.js.trade.data-exchange.clear-topic=SURROUND_EVENT
              # 交易核心事件监听属性
        monitor:
          consumer:
            group:
              id: digitalOld
            bootstrap:
              servers: 192.168.1.21:9091
            isolation:
              level: read_committed
          enabled: false
          topics: NOTIFY


    #  亚马逊 文件服务器
aws:
  s3:
    accessKeyId: AKIASJEIMWLUIXYY3ZX7
    secretKeyId: jjxMD6bEyeha6E/ZWPc+/nkD6BWLrIm1h7uW8yiF
    bucketName: js-photo-test
    region: ap-southeast-1

    # 邀请返佣计算 时间
commission:
  time: 20


upload: #文件上传配置
  localtion:  #配置默认文件保存位置
    windows: E:/springboot-upload/image/
    linux: /dreamhai/springboot-upload/image/
  maxFileSize: 10240KB #单个文件最大KB/MB
  maxRequestSize: 102400KB   #设置总上传数据总大小

