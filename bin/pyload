#! /bin/bash

[[ -L $0 ]] && SCRIPT_FILE=`readlink -fn $0` || SCRIPT_FILE=$0
pushd `dirname "${SCRIPT_FILE}"` >/dev/null
BASE_DIR=`pwd`
popd >/dev/null

source "${BASE_DIR}/module.d/common.sh" || exit 1

VERSION="1.0.1"
NAME=pyload
USER=${NAME}

SCHEME=http
HOST=trade

SENTRY_DSN="http://8dc86b3c1ea045ef89b1b80cc442cebc:96c17c34471c492ba0e28f2fb7d61c48@monitor:9000/2"

SERVICE_LIST="registry nginx"

for SERVICE in ${SERVICE_LIST}; do
    source "${BASE_DIR}/service.d/${SERVICE}.sh" || {
        error "service list file missing: ${SERVICE}.sh"
        exit 1
    }
done

while getopts :H:C: FLAG; do
    case $FLAG in
        H)
            HOST=${OPTARG}
        ;;
        C)
            COUNT=${OPTARG}
        ;;
        *)
            error "invalid args: $*"
        ;;
    esac
done
shift $((OPTIND-1))

COUNT=${COUNT:=1}

if [[ $# -lt 1 || ! $1 =~ \d* ]]; then
    error "invalid args: $*"
    exit 1
fi

IDX=$1
TOTAL_USER_FILE="/opt/${NAME}/CSV/Users.csv"
if [[ $IDX -eq 0 ]]; then
    MODE=master
    NETWORK_ARGS="--network host"
    USER_FILE="${TOTAL_USER_FILE}"
else
    MODE=slave
    SELECT_ID=$((IDX % ${#NGINX_LIST[@]}))
    NGINX_ID=$((SELECT_ID+1))
    SVR_NAME="front00${NGINX_ID}"

    TOTAL_USERS=$((`wc -l "${TOTAL_USER_FILE}" | cut -d' ' -f1` - 1))
    USER_SIZE=$((TOTAL_USERS / COUNT))

    START_LINE=$(($((IDX - 1)) * USER_SIZE + 2))
    END_LINE=$((START_LINE + USER_SIZE - 1))

    USER_FILE="/opt/${NAME}/CSV/users-$IDX.csv"
    info "Spliting User.csv..."
    sed -n '1p; '"${START_LINE}"','"${END_LINE}"'p' "${TOTAL_USER_FILE}" > "${USER_FILE}"

    head -2 "${USER_FILE}" && echo "..." && tail -1 "${USER_FILE}" || exit 1
    info "User file splitted."

    # load balance between all nginx
    NETWORK_ARGS="--add-host `echo -n ${HOST} | cut -d':' -f1`:${NGINX_LIST[${SVR_NAME}]}"
    NETWORK_ARGS="${NETWORK_ARGS} --add-host monitor:172.31.11.0"

    LOCUST_FILE="/opt/pyload/locustfile.py"

    if [[ -f "${LOCUST_FILE}" ]]; then
        RUNNING_SCRIPT="-v ${LOCUST_FILE}:/pyLoadRunner/locustfile.py:ro"
    fi
    
    if [[ -n $3 ]]; then
        ARGS="-M$2 -P$3"
    else
        ARGS="-M$2 -P5557"
    fi
fi

docker run -d \
    --name "${NAME}-$IDX" \
    --restart always \
    ${NETWORK_ARGS} \
    -e SENTRY_DSN="${SENTRY_DSN}" \
    ${RUNNING_SCRIPT} \
    -v "${USER_FILE}":/pyLoadRunner/CSV/users.csv:ro \
    registry:5000/${NAME}:${VERSION} -H"${SCHEME}://${HOST}" -m${MODE} ${ARGS}
