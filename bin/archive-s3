#! /bin/bash

DATA_DIR="/data"
SUDO="sudo"
HOST_NAME="`uname -n | cut -d'.' -f1`"
S3_BASE="s3://js-log-backup"
CLEAN=

function help() {
    echo "`basename $0` [-c] {java|websocket|nginx}"
}

function archive_java() {
    find "${DATA_DIR}" -maxdepth 1 -type d -not -name "packages" -not -name "backup" -not -name "tmp" | while read APP_BASE; do
        APP_LOG_DIR="${APP_BASE}/log"
        
        [[ ! -d "${APP_LOG_DIR}" ]] && continue
        
        pushd "${APP_LOG_DIR}"
        find . -maxdepth 1 -type d -not -name "." -not -name "`date +%Y-%m-%d`" -exec basename {} \; | while read DATE; do
            if [[ -f "${DATE}/.s3" && ${CLEAN} == "true" ]]; then
                ${SUDO} rm -rf "${DATE}"
                continue
            fi
            
            aws s3 cp --recursive ${DATE} "${S3_BASE}/`basename ${APP_BASE}`/${HOST_NAME}/${DATE}/" && ${SUDO} touch "${DATE}/.s3"
        done
        popd
    done
}

function archive_websocket() {
    local WEBSOCKET_LOG_DIR="${DATA_DIR}/marketserver/log"
    
    [[ ! -d "${WEBSOCKET_LOG_DIR}" ]] && return

    pushd "${WEBSOCKET_LOG_DIR}"
        if [[ ${CLEAN} == "true" ]]; then
            find . -type f -name "*.s3" -exec ${SUDO} rm -f {} \;
        else
            find . -type f -name "*.tar.gz" | while read LOG_FILE; do
                aws s3 cp ${LOG_FILE} "${S3_BASE}/marketserver/${HOST_NAME}/" && ${SUDO} mv ${LOG_FILE} "${LOG_FILE}.s3"
            done
        fi
    popd
}

function archive_nginx() {
    local NGINX_LOG_DIR="${DATA_DIR}/nginx/log"
    
    [[ ! -d "${NGINX_LOG_DIR}" ]] && return

    pushd "${NGINX_LOG_DIR}"
        if [[ ${CLEAN} == "true" ]]; then
            find . -type f -name "*.s3" -exec ${SUDO} rm -f {} \;
        else
            find . -type f -name "*.gz" | while read LOG_FILE; do
                aws s3 cp ${LOG_FILE} "${S3_BASE}/nginx/${HOST_NAME}/`date +%Y-%m-%d`/" && ${SUDO} mv ${LOG_FILE} "${LOG_FILE}.s3"
            done
        fi
    popd
}

while getopts :c FLAG; do
    case $FLAG in
        c)
            CLEAN="true"
        ;;
        *)
            help >&2
            exit 1
        ;;
    esac
done
shift $((OPTIND-1))

COMMAND=$1

case $COMMAND in
    java)
        archive_java
    ;;
    websocket)
        archive_websocket
    ;;
    nginx)
        archive_nginx
    ;;
    *)
        help >&2
        exit 1
    ;;
esac
