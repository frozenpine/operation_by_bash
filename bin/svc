#!/bin/bash

[[ -L $0 ]] && SCRIPT_FILE=`readlink -fn $0` || SCRIPT_FILE=$0
pushd `dirname "${SCRIPT_FILE}"` >/dev/null
BASE_DIR=`pwd`
popd >/dev/null

source "${BASE_DIR}/module.d/common.sh" || exit 1
FUNC_FILE_CONFIG="${MODULE_BASE}/config.sh"
import_functions

SERVICE_LIST=

HELP_COMMANDS["sync"]="Sync specified IP-HOST mapping to \"/etc/hosts\" by service name, if no service name specified, all service in \"service.d\" will be synced."
HELP_COMMANDS["create"]="Create service module in \"service.d\" by definition in \"hosts.ini\" \"alias.ini\" \"ports.ini\""

function _make_serivce() {
    if [[ $# -lt 1 ]]; then
        error "app group name missing."
        exit 1
    fi

    if [[ ! -d "${SERVICE_BASE}" ]]; then
        ${SUDO} mkdir -p "${SERVICE_BASE}"
    fi

    typeset -u APP_GROUP_NAME

    APP_GROUP_NAME=$1

    declare -A ARRAY_LIST

    for APP_CONNECTION in `extract_ini_sec $1 "${HOST_FILE}"`; do
        parse_ssh ${APP_CONNECTION}

        if [[ $? -ne 0 ]]; then
            error "invalid connection config in host.ini: ${APP_CONNECTION}"
            exit 1
        fi

        ARRAY_LIST[${SSH_HOST}]=${HOST_ALIAS[$SSH_HOST]}
    done || {
        error "parse hosts.ini failed"
        exit 1
    }

    cat <<EOF >"${SERVICE_BASE}/$1.sh"
declare -A ${APP_GROUP_NAME}_LIST
`
for HOST in ${!ARRAY_LIST[@]}; do
    echo "${APP_GROUP_NAME}_LIST[\"$HOST\"]=\"${ARRAY_LIST[$HOST]}\""
done
`

${APP_GROUP_NAME}_PORT=${PORTS[$1]}

for SVR_NAME in \${!${APP_GROUP_NAME}_LIST[@]}; do
    IP=\`grep -E "[[:space:]]\${SVR_NAME}([[:space:]]+)?" /etc/hosts | awk '{print \$1}'\`
    
    if [[ -z \${IP} || \${IP} != "\${${APP_GROUP_NAME}_LIST[\$SVR_NAME]}" ]]; then
        \${SUDO} sed -i 's/'"[[:space:]]\${SVR_NAME}"'//' /etc/hosts

        grep -E "\${${APP_GROUP_NAME}_LIST[\$SVR_NAME]}[[:space:]]+" /etc/hosts >/dev/null
        if [[ \$? -eq 0 ]]; then
            \${SUDO} sed -i '/'"\${${APP_GROUP_NAME}_LIST[\${SVR_NAME}]}[[:space:]]"'/ s/\(.*\)/\1 '"\${SVR_NAME}"'/' /etc/hosts
        else
            \${SUDO} sed -i '\$a'"\${${APP_GROUP_NAME}_LIST[\$SVR_NAME]} \${SVR_NAME}" /etc/hosts
        fi
    fi
done
EOF
}

function _sync_host() {
    for SERVICE in ${SERVICE_LIST}; do
        source "${SERVICE_BASE}/${SERVICE}.sh" || {
            echo "service list file missing: ${SERVICE}.sh" >&2
            exit 1
        }
    done
}

function _list_services() {
    if [[ $# -lt 1 ]]; then
        SERVICE_LIST=`find "${BASE_DIR}/service.d" -maxdepth 1 -type f -name "*.sh" -exec basename {} \; | cut -d'.' -f1 | xargs`
    else
        SERVICE_LIST="$*"
    fi
}

while getopts :h FLAG; do
    case $FLAG in
        h)
            _help >&2
            exit
        ;;
        *)
            _help >&2
            exit 1
        ;;
    esac
done
shift $((OPTIND - 1))

COMMAND=$1
shift

case ${COMMAND} in
    sync)
        _list_services
        _sync_host
        info "all IP-HOST synced."
        cat /etc/hosts
    ;;
    create)
        declare -A HOST_ALIAS
        alias_address
        declare -A PORTS
        app_ports

        for HOST_SEC_NAME in `list_sections`; do
            _make_serivce ${HOST_SEC_NAME}
        done
        info "service.d modules created."
    ;;
    *)
        error "invalid command"
        exit 1
    ;;
esac
